{"version":3,"sources":["encrypt/result/Result.js","encrypt/result/pbKey.js","decode/Decode.js","encrypt/Encrypt.js","RedirectTo.js","SetKey.js","App.js","index.js"],"names":["Result","text","render","useState","encrypted","setEncrypted","qr","setQr","openTooltip","setOpenTooltip","useEffect","msg","keyBase64","publicKey","key","NodeRSA","Buffer","from","encodeURIComponent","encrypt","setter","QRC","toDataURL","err","url","console","log","getQr","timeout","setTimeout","clearTimeout","className","href","download","src","open","disableFocusListener","disableHoverListener","disableTouchListener","title","variant","fullWidth","onClick","navigator","clipboard","writeText","decrypt","Cookies","get","undefined","Decode","useParams","byteLength","Encrypt","res","setRes","setMsg","setRender","onSubmit","e","preventDefault","old","TextField","label","margin","value","onChange","target","Button","type","Redirect","path","navigateTo","useNavigate","SetKey","set","expires","RedirectTo","router","createBrowserRouter","element","App","ReactDOM","createRoot","document","getElementById"],"mappings":"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","file":"static/js/main.3e42fd64.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Button from \"@mui/material/Button\";\r\nimport publicKey from \"./pbKey\";\r\nimport NodeRSA from \"node-rsa\";\r\nimport QRC from \"qrcode\";\r\nimport \"./result.scss\";\r\n\r\nconst encrypt = (msg) => {\r\n  const keyBase64 = publicKey;\r\n  const key = new NodeRSA(Buffer.from(keyBase64, \"base64\"), \"pkcs8-public-der\");\r\n  return (\r\n    \"https://atomicul.github.io/cryptobby/msg/\" +\r\n    // \"http://localhost:3000/cryptobby/msg/\" +\r\n    encodeURIComponent(key.encrypt(Buffer.from(msg), \"base64\"))\r\n  );\r\n};\r\n\r\nconst getQr = (text, setter) => {\r\n  QRC.toDataURL(text, (err, url) => {\r\n    if (err) {\r\n      console.log(err);\r\n    } else setter(url);\r\n  });\r\n};\r\n\r\nconst copyToClipboard = (msg) => {\r\n  navigator.clipboard.writeText(msg);\r\n};\r\n\r\nconst Result = ({ text, render }) => {\r\n  const [encrypted, setEncrypted] = useState(null);\r\n  const [qr, setQr] = useState(\"\");\r\n  const [openTooltip, setOpenTooltip] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    copyToClipboard(encrypted);\r\n    setOpenTooltip(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setEncrypted(encrypt(text));\r\n  }, [render]);\r\n\r\n  useEffect(() => {\r\n    getQr(encrypted, setQr);\r\n    console.log(encrypted);\r\n  }, [encrypted]);\r\n\r\n  useEffect(() => {\r\n    let timeout;\r\n    if (openTooltip) {\r\n      timeout = setTimeout(() => {\r\n        setOpenTooltip(false);\r\n      }, 3000);\r\n    }\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n  }, [openTooltip]);\r\n\r\n  return (\r\n    <div className=\"result\">\r\n      <a href={qr} download=\"encrypted-qr.png\">\r\n        <img src={qr} />\r\n      </a>\r\n      <Tooltip\r\n        open={openTooltip}\r\n        disableFocusListener\r\n        disableHoverListener\r\n        disableTouchListener\r\n        title=\"Copied\"\r\n      >\r\n        <Button variant=\"contained\" fullWidth onClick={handleClick}>\r\n          Copy Link\r\n        </Button>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","export default \"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC4lNkTvRy8Fe7/ENVkDUuJwq/vxsbF+i/YYTkEapOuKVV5tBERYFZ7sYqRv6JWojjY/FuWQ/ard1oNztvgrM8lmMm2MHd3h+pCiUvxPqY8Bs52lQ3ErivvC5Stg+VwdTT4HDaH0AiDPzNVpaPehY9vFB2byaMGcgFdnw5cCWLaTwIDAQAB\";","import { useParams } from \"react-router-dom\";\r\nimport NodeRSA from \"node-rsa\";\r\nimport Cookies from \"js-cookie\";\r\nimport React from \"react\";\r\nimport \"./decode.scss\";\r\n\r\n\r\nconst decrypt = (msg) => {\r\n  const keyBase64 = Cookies.get(\"key\");\r\n  console.log(keyBase64);\r\n  if (keyBase64 === undefined) return \"Nu e pentru tine >_<\";\r\n  const key = new NodeRSA(Buffer.from(keyBase64, 'base64'), 'pkcs8-private-der');\r\n  return key.decrypt(Buffer.from(msg, 'base64'), 'utf8');\r\n};\r\n\r\nconst Decode = () => {\r\n  const { msg } = useParams();\r\n  console.log(Cookies.get(\"key\"));\r\n  console.log(Buffer.from(msg, 'base64').byteLength);\r\n  return (\r\n    <div className=\"decode\">\r\n      <h1>{decrypt(msg)}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Decode;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Result from \"./result/Result\";\r\nimport \"./encrypt.scss\";\r\n\r\nconst Encrypt = () => {\r\n  const [res, setRes] = useState(null);\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [render, setRender] = useState(0);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setRes(<Result text={msg} render={render} />);\r\n    setRender((old) => old + 1);\r\n    setMsg(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"encrypt\">\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          label=\"Message\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"dense\"\r\n          value={msg}\r\n          onChange={(e) => setMsg(e.target.value)}\r\n        />\r\n        <Button variant=\"outlined\" fullWidth margin=\"dense\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </form>\r\n      {res}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Encrypt;\r\n","import { useNavigate } from \"react-router\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nconst Redirect = ({path}) => {\r\n    const navigateTo = useNavigate();\r\n    useEffect(() => {\r\n        navigateTo(path);\r\n    }, []);\r\n}\r\n\r\nexport default Redirect;","import { useNavigate, useParams } from \"react-router\";\r\nimport React, { useEffect } from \"react\";\r\nimport RedirectTo from \"./RedirectTo\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst SetKey = () => {\r\n    const { key } = useParams();\r\n    Cookies.set(\"key\", key, { expires: 365, path: \"/\" });\r\n    return <RedirectTo path=\"/cryptobby/encrypt\" />;\r\n};\r\n\r\nexport default SetKey;\r\n","import { createBrowserRouter, RouterProvider, Route } from \"react-router-dom\";\nimport Encrypt from \"./encrypt/Encrypt\";\nimport RedirectTo from \"./RedirectTo\";\nimport Decode from \"./decode/Decode\";\nimport SetKey from \"./SetKey\";\nimport \"./global.css\";\n\nconst router = createBrowserRouter([\n  {\n    path: \"/cryptobby\",\n    element: <RedirectTo path=\"/cryptobby/encrypt\" />,\n  },\n  {\n    path: \"/cryptobby/msg/:msg\",\n    element: <Decode />,\n  },\n  {\n    path: \"/cryptobby/encrypt\",\n    element: <Encrypt />,\n  },\n  {\n    path: \"/cryptobby/setkey/:key\",\n    element: <SetKey />,\n  },\n]);\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n","import { HashRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom/client';\nimport React from 'react';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <HashRouter >\n        <App />\n    </HashRouter>\n);\n"],"sourceRoot":""}